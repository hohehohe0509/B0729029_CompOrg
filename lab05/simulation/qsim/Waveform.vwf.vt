// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/08/2019 17:18:42"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Block3
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Block3_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clean;
reg clk;
// wires                                               
wire a0;
wire a1;
wire a2;
wire a3;
wire a4;
wire a5;
wire a6;
wire b0;
wire b1;
wire b2;
wire b3;
wire b4;
wire b5;
wire b6;
wire c0;
wire c1;
wire c2;
wire c3;
wire c4;
wire c5;
wire c6;
wire d0;
wire d1;
wire d2;
wire d3;
wire d4;
wire d5;
wire d6;

// assign statements (if any)                          
Block3 i1 (
// port map - connection between master ports and signals/registers   
	.a0(a0),
	.a1(a1),
	.a2(a2),
	.a3(a3),
	.a4(a4),
	.a5(a5),
	.a6(a6),
	.b0(b0),
	.b1(b1),
	.b2(b2),
	.b3(b3),
	.b4(b4),
	.b5(b5),
	.b6(b6),
	.c0(c0),
	.c1(c1),
	.c2(c2),
	.c3(c3),
	.c4(c4),
	.c5(c5),
	.c6(c6),
	.clean(clean),
	.clk(clk),
	.d0(d0),
	.d1(d1),
	.d2(d2),
	.d3(d3),
	.d4(d4),
	.d5(d5),
	.d6(d6)
);
initial 
begin 
#1000000 $finish;
end 

// clean
initial
begin
	clean = 1'b1;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #5000 1'b1;
	#5000;
end 
endmodule

